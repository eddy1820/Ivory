// Code generated by MockGen. DO NOT EDIT.
// Source: account_usecase.go

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "gate/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccountUsecase is a mock of AccountUsecase interface.
type MockAccountUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAccountUsecaseMockRecorder
}

// MockAccountUsecaseMockRecorder is the mock recorder for MockAccountUsecase.
type MockAccountUsecaseMockRecorder struct {
	mock *MockAccountUsecase
}

// NewMockAccountUsecase creates a new mock instance.
func NewMockAccountUsecase(ctrl *gomock.Controller) *MockAccountUsecase {
	mock := &MockAccountUsecase{ctrl: ctrl}
	mock.recorder = &MockAccountUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountUsecase) EXPECT() *MockAccountUsecaseMockRecorder {
	return m.recorder
}

// GetAccountInfoByAccount mocks base method.
func (m *MockAccountUsecase) GetAccountInfoByAccount(account string) (domain.Account, int) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountInfoByAccount", account)
	ret0, _ := ret[0].(domain.Account)
	ret1, _ := ret[1].(int)
	return ret0, ret1
}

// GetAccountInfoByAccount indicates an expected call of GetAccountInfoByAccount.
func (mr *MockAccountUsecaseMockRecorder) GetAccountInfoByAccount(account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountInfoByAccount", reflect.TypeOf((*MockAccountUsecase)(nil).GetAccountInfoByAccount), account)
}

// InsertAccount mocks base method.
func (m *MockAccountUsecase) InsertAccount(account domain.Account) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertAccount", account)
	ret0, _ := ret[0].(int)
	return ret0
}

// InsertAccount indicates an expected call of InsertAccount.
func (mr *MockAccountUsecaseMockRecorder) InsertAccount(account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertAccount", reflect.TypeOf((*MockAccountUsecase)(nil).InsertAccount), account)
}
